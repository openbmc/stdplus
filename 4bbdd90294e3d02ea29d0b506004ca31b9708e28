{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "929320c2_e834789e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-07T18:06:56Z",
      "side": 1,
      "message": "it seems like this will cause an issue with gtest\n\n```\n/usr/local/include/gmock/gmock-matchers.h:3228:8:   required from here\n/usr/local/include/gmock/gmock-matchers.h:3238:43: error: no type named \u0027const_iterator\u0027 in \u0027testing::internal::ElementsAreMatcherImpl\u003cconst std::span\u003cconst std::byte\u003e\u0026\u003e::StlContainer\u0027 {aka \u0027class std::span\u003cconst std::byte\u003e\u0027}\n/usr/local/include/gmock/gmock-matchers.h:3238:43: error: no type named \u0027const_iterator\u0027 in \u0027testing::internal::ElementsAreMatcherImpl\u003cconst std::span\u003cconst std::byte\u003e\u0026\u003e::StlContainer\u0027 {aka \u0027class std::span\u003cconst std::byte\u003e\u0027}\n```",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ea80ca2_9e1edc25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-07T18:24:22Z",
      "side": 1,
      "message": "I guess we can wait for the new googletest release to include https://github.com/google/googletest/pull/3195 and just update the docker to point to the rev. Or fix all repo that might have an issue...",
      "parentUuid": "929320c2_e834789e",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01ca731c_81e62cdb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T18:27:31Z",
      "side": 1,
      "message": "I don\u0027t think everything that pull in stdplus is c++20 yet.",
      "parentUuid": "4ea80ca2_9e1edc25",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75ade388_4bd816da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-07T18:32:43Z",
      "side": 1,
      "message": "it seems like only the following uses stdplus in openbmc.\n\n```\n$ git grep \"stdplus\"\nmeta-google/recipes-google/ncsi/ncsid_git.bb:  stdplus \\\nmeta-google/recipes-google/networking/dhcp-done_git.bb:  stdplus \\\nmeta-phosphor/recipes-extended/sdeventplus/sdeventplus_git.bb:        stdplus \\\nmeta-phosphor/recipes-extended/stdplus/stdplus_git.bb:HOMEPAGE \u003d \"http://github.com/openbmc/stdplus\"\nmeta-phosphor/recipes-extended/stdplus/stdplus_git.bb:SRC_URI +\u003d \"git://github.com/openbmc/stdplus;branch\u003dmaster;protocol\u003dhttps\"\nmeta-phosphor/recipes-phosphor/ipmi/phosphor-ipmi-kcs_git.bb:        stdplus \\\nmeta-phosphor/recipes-phosphor/network/phosphor-network_git.bb:DEPENDS +\u003d \"stdplus\"\nmeta-phosphor/recipes-phosphor/sensors/phosphor-hwmon_git.bb:        stdplus \\\nmeta-phosphor/recipes-phospho\n```\n\nI just checked and they are all c++20",
      "parentUuid": "01ca731c_81e62cdb",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3894b86_00fd4d53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-07T18:33:03Z",
      "side": 1,
      "message": "missed the last line.\n\n```\nmeta-phosphor/recipes-phosphor/storage/estoraged.bb:DEPENDS +\u003d \"stdplus\"\n```",
      "parentUuid": "75ade388_4bd816da",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "902591ab_72e2933f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T18:34:33Z",
      "side": 1,
      "message": "Yes, but I think there are transitive dependencies in there which could rely on this.",
      "parentUuid": "d3894b86_00fd4d53",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "892c5a18_d64dfe1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-07T18:39:56Z",
      "side": 1,
      "message": "ah, I see. oof, that\u0027s tough to clean up. I guess I\u0027ll just leave this here for now.\n\nbuild script change as a side note,\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/52713",
      "parentUuid": "902591ab_72e2933f",
      "revId": "4bbdd90294e3d02ea29d0b506004ca31b9708e28",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}