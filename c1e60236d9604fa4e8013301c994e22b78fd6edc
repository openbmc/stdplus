{
  "comments": [
    {
      "key": {
        "uuid": "387f3487_779a4722",
        "filename": "src/stdplus/io_uring.cpp",
        "patchSetId": 12
      },
      "lineNbr": 107,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-08-17T09:06:37Z",
      "side": 1,
      "message": "I\u0027d like to make this API easier to use for multiple callers on the same ring, see https://gerrit.openbmc-project.xyz/c/openbmc/stdplus/+/45945",
      "revId": "c1e60236d9604fa4e8013301c994e22b78fd6edc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e57d42cc_d77bce5b",
        "filename": "src/stdplus/io_uring.hpp",
        "patchSetId": 12
      },
      "lineNbr": 28,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-08-17T09:06:37Z",
      "side": 1,
      "message": "I\u0027m trying to avoid redefining liburing constants / types into here. Let\u0027s just use the liburing types / constants directly.",
      "revId": "c1e60236d9604fa4e8013301c994e22b78fd6edc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e521c713_bb1fc081",
        "filename": "src/stdplus/io_uring.hpp",
        "patchSetId": 12
      },
      "lineNbr": 30,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-08-17T09:06:37Z",
      "side": 1,
      "message": "It would be nice if we just had 2 constructors and avoided the sentinel value.\n\nAdditionally, you could extend the current one to allow passing flags with a default value of `0`.",
      "revId": "c1e60236d9604fa4e8013301c994e22b78fd6edc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}